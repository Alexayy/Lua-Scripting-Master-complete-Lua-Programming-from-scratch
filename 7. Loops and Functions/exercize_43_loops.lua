---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by acakic.
--- DateTime: 12/4/20 7:54 PM
---

math.randomseed(os.time())

--Create a Lua script that displays all integer numbers between 1000 and 1, in descending order.
for n = 1000, 1, -1 do
    print(n)
end

--Create a Lua script that displays 20 random numbers between 1 and 6.
for i = 1, 20 do
    local spring_rand = math.random(1, 6)
    print("Random numbers generated: "..spring_rand)
end

--Create a Lua script that displays 100 random numbers between 1 and 6. At the end, the script should
--display a summary of how many 1’s, 2’s, 3’s, 4’s, 5’s, and 6’s were picked.
local count1 = 0
local count2 = 0
local count3 = 0
local count4 = 0
local count5 = 0
local count6 = 0

for j = 1, 20 do

    local spring_rand_avg = math.random(1, 6)

    if spring_rand_avg == 1 then count1 = count1 + 1 end
    if spring_rand_avg == 2 then count2 = count2 + 1 end
    if spring_rand_avg == 3 then count3 = count3 + 1 end
    if spring_rand_avg == 4 then count4 = count4 + 1 end
    if spring_rand_avg == 5 then count5 = count5 + 1 end
    if spring_rand_avg == 6 then count6 = count6 + 1 end
end

print("Total outcome with result 1: "..count1)
print("Total outcome with result 2: "..count2)
print("Total outcome with result 3: "..count3)
print("Total outcome with result 4: "..count4)
print("Total outcome with result 5: "..count5)
print("Total outcome with result 6: "..count6)

--[Create a Lua script that initializes a variable with a currency number value in dollars. The script should break
--down the value in the optimal number of currency notes that are needed to represent that value. The available notes
--are 100, 50, 20, 10, 5, and 1 dollar notes. For example, to represent 689 dollars we need:
--
--    6 notes of 100 dollars
--
--    1 note of 50 dollars
--
--    1 note of 20 dollars
--
--    1 note of 10 dollars
--
--    1 note of 5 dollars
--
--    4 notes of 1 dollar
--
--Tip: In exercise 4, you might find useful to use integer division (the // operator) and also the mod operator (%) to
--get the remainder between the division of two numbers.]
-- Initialize the currency amount
total = 689

-- Get the integer part of the division and the remainder
number_of_100 = total // 100
remainder_100 = total % 100

number_of_50 = remainder_100 // 50
remainder_50 = remainder_100 % 50

number_of_20 = remainder_50 // 20
remainder_20 = remainder_50 % 20

number_of_10 = remainder_20 // 10
remainder_10 = remainder_20 % 10

number_of_5 = remainder_10 // 5
remainder_5 = remainder_10 % 5

number_of_1 = remainder_5

-- Display the number of notes for 100, 50, 20, 10, 5, and 1
print("Total of 100 notes: "..number_of_100)
print("Total of  50 notes: "..number_of_50)
print("Total of  20 notes: "..number_of_20)
print("Total of  10 notes: "..number_of_10)
print("Total of   5 notes: "..number_of_5)
print("Total of   1 notes: "..number_of_1)

--[Create a simple Lua script that inverts all the words in a sentence. For example:
--
--    Input: “The quick fox jumps over the lazy dog”
--
--    Output: “dog lazy the over jumps fox quick The”
--
--Tip: In exercise 5, you might find useful to use the function string.gmatch(text,”%S+”) to split a string into substrings.]
-- Initialize a sentence
text = "The quick fox jumps over the lazy dog."

-- Split string and return a list of words
words = string.gmatch(text, "%S+")

result = ""

-- Loop all words adding each word to the beginning of the final result string
for word in words do
    result = word.." "..result
end

-- Display the final inverted result sentence
print("Inverted sentence: "..result)
